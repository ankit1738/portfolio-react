{"version":3,"sources":["Views/Header/styles.js","RoleContext.js","firebase.js","Views/Header/index.js","Views/About/styles.js","styles.js","Views/About/editModal.js","Views/About/addModal.js","Views/About/index.js","Views/Education/styles.js","Views/Education/TimelineComponent.js","Views/Education/editModal.js","Views/Education/addModal.js","Views/Education/index.js","Views/Experience/styles.js","Views/Experience/TimelineComponent.js","Views/Experience/editModal.js","Views/Experience/addModal.js","Views/Experience/index.js","Views/Skills/styles.js","Views/Skills/editModal.js","Views/Skills/addModal.js","Views/Skills/index.js","Views/Projects/styles.js","Views/Projects/projectCard.js","Views/Projects/editModal.js","Views/Projects/addModal.js","Views/Projects/index.js","Views/Contact/styles.js","Views/Contact/index.js","Views/Projects/Project/styles.js","Views/Projects/Project/index.js","Views/AdminLogin/styles.js","Views/AdminLogin/index.js","Views/Projects/Project/addEditProjectDetails.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","createStyles","root","flexGrow","appBar","background","color","boxShadow","toolbar","justifyContent","padding","right","float","marginRight","spacing","title","adminButton","backgroundColor","orange","margin","display","RoleContext","createContext","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","storage","auth","Header","classes","styles","useState","open","setOpen","history","useHistory","useContext","role","toggleDrawer","setRole","state","current","className","AppBar","position","Container","maxWidth","Toolbar","left","Typography","variant","window","innerWidth","Link","underline","href","Button","size","onClick","signOut","then","console","log","catch","error","push","Drawer","anchor","onClose","height","heading","secondary","divider","width","headingGrid","alignItems","contentContainer","marginTop","aboutGrid","flexDirection","avatar","objectFit","borderRadius","breakpoints","down","aboutContent","paper","palette","border","shadows","top","transform","leftMargin","marginLeft","nameColor","StyledTypography","styled","props","StyledTimeline","Timeline","EditModal","handleClose","data","Modal","aria-labelledby","aria-describedby","initialValues","name","about","validate","values","errors","abour","onSubmit","setSubmitting","collection","doc","id","update","submitForm","isSubmitting","component","TextField","type","label","fullWidth","multiline","LinearProgress","AddModal","add","About","aboutData","setAboutData","editData","setEditData","openEditModal","setOpenEditModal","openAddModal","setOpenAddModal","reload","setReload","dpURL","setDPURL","useEffect","get","querySnapshot","a","docs","forEach","err","message","ref","getDownloadURL","imgUrl","Grid","container","item","sm","xs","avatarGrid","src","lg","image","put","prev","SimpleFileUpload","confirm","delete","_","isEmpty","alert","centerGrid","contentPadding","TimelineComponent","TimelineItem","TimelineOppositeContent","style","flex","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","degree","course","grade","gradePoint","handleOpenEditModal","handleDelete","align","startDate","endDate","location","TimelineLastComponent","handleCloseEditModal","setTimeout","handleCloseAddModal","educationData","setEducationData","addData","orderBy","find","Divider","justify","map","index","key","desc","whiteSpace","duration","moment","format","durationMonths","diff","durationYear","designation","edit","rows","Experience","experienceData","setExperienceData","sort","x","y","md","StyledProgress","StyledTooltip","Tooltip","level","Skills","skillsData","setSkillsData","slice","Math","ceil","length","Box","arrow","placement","value","floor","img","allProject","textAlign","textDecoration","fontSize","centre","ProjectCard","Card","CardActionArea","CardMedia","CardContent","gutterBottom","projectTitle","Date","on","child","url","imageURL","omit","imageName","projectDetails","project","Projects","projectsData","setProjectsData","to","pathname","projectDetailsId","refFromURL","icons","backToTop","cursor","Contact","scrollTo","form","borderBottom","Project","useLocation","projectData","setProjectData","exists","technologies","split","demoLink","githubLink","centreButton","AdminLogin","email","password","signInWithEmailAndPassword","goBack","AddEditProjectDetails","ids","App","createMuiTheme","primary","overrides","MuiButton","containedPrimary","onAuthStateChanged","user","ThemeProvider","Provider","path","Education","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3b8a8d16.chunk.js","sourcesContent":["import { createStyles, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            flexGrow: 1,\n        },\n        appBar: {\n            background: \"#18242b\",\n            color: \"#ffffff\",\n            boxShadow: \"none\",\n        },\n        toolbar: {\n            justifyContent: \"space-between\",\n            padding: \"0\",\n        },\n        right: {\n            float: \"right\",\n            \"& *\": {\n                color: \"#ffffff\",\n                marginRight: theme.spacing(8),\n            },\n            \"&:last-child\": {\n                marginRight: theme.spacing(-8),\n            },\n        },\n        title: {\n            flexGrow: 1,\n        },\n        adminButton: {\n            backgroundColor: theme.orange,\n            margin: \"0 auto\",\n            display: \"inline\",\n            \"& span\": {\n                margin: \"0 32px\",\n            },\n        },\n    })\n);\n\nexport default useStyles;\n","import React, { createContext } from \"react\";\n\nexport const RoleContext = createContext(null);\n","import firebase from \"firebase\";\nimport \"firebase/firestore\";\n\nfirebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: \"portfolio-1738.firebaseapp.com\",\n    databaseURL: \"https://portfolio-1738.firebaseio.com\",\n    projectId: \"portfolio-1738\",\n    storageBucket: \"portfolio-1738.appspot.com\",\n    messagingSenderId: \"30560749165\",\n    appId: \"1:30560749165:web:5bd677c8def1525bb12164\",\n    measurementId: \"G-GTE1LSVW9L\",\n});\n\nlet db = firebase.firestore();\nlet storage = firebase.storage();\nlet auth = firebase.auth();\n\nexport default {\n    firebase,\n    storage,\n    db,\n    auth,\n};\n","import React, { Fragment, useState, useContext } from \"react\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    Button,\n    Link,\n    Container,\n    Drawer,\n} from \"@material-ui/core\";\nimport styles from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoleContext } from \"../../RoleContext\";\nimport firebase from \"../../firebase\";\nfunction Header() {\n    const classes = styles();\n    const [open, setOpen] = useState(false);\n    const history = useHistory();\n    const { role, setRole } = useContext(RoleContext);\n\n    const toggleDrawer = (state) => {\n        setOpen((current) => !current);\n    };\n\n    const handleAdminAccess = () => {\n        console.log(\"here\");\n        history.push(\"/adminLogin\");\n    };\n\n    const handleLogout = () => {\n        firebase.auth\n            .signOut()\n            .then(function () {\n                console.log(\"Sign-out successful.\");\n            })\n            .catch(function (error) {\n                console.log(\"An error happened.\");\n            });\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Container maxWidth=\"lg\">\n                    <Toolbar className={classes.toolbar}>\n                        <div className={classes.left}>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                Ankit Kumar\n                            </Typography>\n                        </div>\n                        {window.innerWidth > 600 ? (\n                            <div className={classes.right}>\n                                <Link underline=\"none\" href=\"#education\">\n                                    Education\n                                </Link>\n                                <Link underline=\"none\" href=\"#experience\">\n                                    Experience\n                                </Link>\n                                <Link underline=\"none\" href=\"#skills\">\n                                    Skills\n                                </Link>\n                                <Link underline=\"none\" href=\"#projects\">\n                                    Projects\n                                </Link>\n                                <Link underline=\"none\" href=\"#contact\">\n                                    Contact\n                                </Link>\n                                {role === \"admin\" ? (\n                                    <Button\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleLogout}\n                                        className={classes.adminButton}>\n                                        Logout\n                                    </Button>\n                                ) : (\n                                    <Button\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={handleAdminAccess}\n                                        className={classes.adminButton}>\n                                        Admin\n                                    </Button>\n                                )}\n                            </div>\n                        ) : (\n                            <Fragment>\n                                <Button onClick={toggleDrawer}>Ham</Button>\n                                <Drawer\n                                    anchor=\"right\"\n                                    open={open}\n                                    onClose={toggleDrawer}\n                                    onClick={toggleDrawer}>\n                                    <Link underline=\"none\" href=\"#education\">\n                                        Education\n                                    </Link>\n                                    <Link underline=\"none\" href=\"#experience\">\n                                        Experience\n                                    </Link>\n                                    <Link underline=\"none\" href=\"#skills\">\n                                        Skills\n                                    </Link>\n                                    <Link underline=\"none\" href=\"#projects\">\n                                        Projects\n                                    </Link>\n                                    <Link underline=\"none\" href=\"#contact\">\n                                        Contact\n                                    </Link>\n                                </Drawer>\n                            </Fragment>\n                        )}\n                    </Toolbar>\n                </Container>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default Header;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            // marginTop: \"100px\",\n            height: \"calc(100vh - 100px)\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.secondary,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.secondary,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: \"64px\",\n            height: \"100%\",\n        },\n        aboutGrid: {\n            \"& div:first-child\": {\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n            },\n        },\n        avatar: {\n            objectFit: \"cover\",\n            width: \"370px\",\n            height: \"400px\",\n            borderRadius: \"4%\",\n            // border: \"1px solid white\",\n            [theme.breakpoints.down(600)]: {\n                width: \"280px\",\n                height: \"300px\",\n                margin: \"0 auto\",\n            },\n        },\n        aboutContent: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        },\n        paper: {\n            position: \"absolute\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid #000\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            top: `50%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        },\n        leftMargin: {\n            marginLeft: \"16px\",\n        },\n        nameColor: {\n            color: theme.orange + `!important`,\n        },\n    })\n);\n","import { styled } from \"@material-ui/core/styles\";\n\nimport { Typography } from \"@material-ui/core\";\nimport { Timeline } from \"@material-ui/lab\";\n\nexport const StyledTypography = styled(Typography)((props) => ({\n    color: props.theme.secondary,\n}));\n\nexport const StyledTimeline = styled(Timeline)((props) => ({\n    color: props.theme.secondary,\n    padding: \"0\",\n}));\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction EditModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        about: data?.data.about,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.about) {\n                            errors.abour = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values);\n                        firebase.db\n                            .collection(\"About\")\n                            .doc(data.id)\n                            .update(values)\n                            .then(() => {\n                                console.log(\"Updated\");\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"text\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                name=\"about\"\n                                type=\"text\"\n                                label=\"About\"\n                                multiline\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default EditModal;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField, InputBase } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction AddModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        about: data?.data.about,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.about) {\n                            errors.abour = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values);\n                        firebase.db\n                            .collection(\"About\")\n                            .add(values)\n                            .then((doc) => {\n                                // console.log(doc);\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"text\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                name=\"about\"\n                                type=\"text\"\n                                label=\"About\"\n                                multiline\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default AddModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Grid, Button, LinearProgress } from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\nimport { StyledTypography as Typography } from \"../../styles\";\nimport firebase from \"../../firebase\";\nimport EditModal from \"./editModal\";\nimport AddModal from \"./addModal\";\nimport _ from \"lodash\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField, SimpleFileUpload } from \"formik-material-ui\";\nimport { RoleContext } from \"../../RoleContext\";\n\nfunction About() {\n    const classes = styles();\n    const [aboutData, setAboutData] = useState({});\n    const [editData, setEditData] = useState();\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [openAddModal, setOpenAddModal] = useState(false);\n    const [reload, setReload] = useState(true);\n    const [dpURL, setDPURL] = useState();\n    const { role } = useContext(RoleContext);\n\n    const edit = (id) => {\n        console.log(aboutData);\n        if (!_.isEmpty(aboutData)) {\n            setEditData(aboutData);\n            setOpenEditModal(true);\n        } else {\n            window.alert(\"Add about data first\");\n        }\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            firebase.db\n                .collection(\"About\")\n                .doc(id)\n                .delete()\n                .then(() => {\n                    console.log(\"Deleted\");\n                    setReload((prev) => !prev);\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n\n    const handleOpenAddModal = () => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseEditModal = (id) => {\n        setOpenEditModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleCloseAddModal = (id) => {\n        setOpenAddModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const deleteImage = () => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            const storageRef = firebase.storage.ref(`/images/DP/dp`);\n            storageRef\n                .delete()\n                .then(function () {\n                    console.log(\"File Deleted Sucessfully\");\n                    setReload((prev) => !prev);\n                })\n                .catch(function (error) {\n                    console.log(\"error\");\n                });\n        }\n    };\n\n    useEffect(() => {\n        try {\n            firebase.db\n                .collection(\"About\")\n                .get()\n                .then(async (querySnapshot) => {\n                    await querySnapshot.docs.forEach((doc) => {\n                        setAboutData({ id: doc.id, data: doc.data() });\n                        console.log(doc.data());\n                    });\n                })\n                .catch((err) => {\n                    console.log(err.message);\n                });\n            firebase.storage\n                .ref(\"images/DP/dp\")\n                .getDownloadURL()\n                .then((imgUrl) => {\n                    setDPURL(imgUrl);\n                })\n                .catch((err) => {\n                    console.log(\"DP not found\");\n                });\n        } catch (err) {\n            console.log(err);\n        }\n    }, [reload]);\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container className={classes.aboutGrid} spacing={10}>\n                    <Grid item sm={5} xs={12} className={classes.avatarGrid}>\n                        <img className={classes.avatar} src={dpURL} />\n                        {role === \"admin\" ? (\n                            <Grid item lg={12}>\n                                <>\n                                    <Formik\n                                        initialValues={{\n                                            image: \"\",\n                                        }}\n                                        validate={(values) => {\n                                            const errors = {};\n\n                                            if (!values.image) {\n                                                errors.image = \"Required\";\n                                            }\n                                            return errors;\n                                        }}\n                                        onSubmit={async (\n                                            values,\n                                            { setSubmitting }\n                                        ) => {\n                                            const uploadTask = await firebase.storage\n                                                .ref(`/images/DP/dp`)\n                                                .put(values.image);\n                                            setSubmitting(false);\n                                            setReload((prev) => !prev);\n                                        }}>\n                                        {({ submitForm, isSubmitting }) => (\n                                            <Form>\n                                                <Field\n                                                    component={SimpleFileUpload}\n                                                    name=\"image\"\n                                                    fullWidth\n                                                />\n                                                <br />\n                                                {isSubmitting && (\n                                                    <LinearProgress />\n                                                )}\n                                                <br />\n                                                <Button\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    onClick={submitForm}>\n                                                    Change DP\n                                                </Button>\n                                            </Form>\n                                        )}\n                                    </Formik>\n                                    <Button\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() => deleteImage()}>\n                                        Delete\n                                    </Button>\n                                </>\n                            </Grid>\n                        ) : (\n                            \"\"\n                        )}\n                    </Grid>\n                    <Grid item sm={7} xs={12} className={classes.aboutContent}>\n                        {_.isEmpty(aboutData) && (\n                            <Grid item lg={12}>\n                                <Button\n                                    size=\"small\"\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={handleOpenAddModal}>\n                                    Add about data\n                                </Button>\n                            </Grid>\n                        )}\n                        <Typography variant=\"h5\">Hi, I'm</Typography>\n                        <Typography variant=\"h3\" className={classes.nameColor}>\n                            {aboutData.data?.name}\n                        </Typography>\n                        <Typography variant=\"body1\">\n                            {aboutData.data?.about}\n                        </Typography>\n                        {role === \"admin\" ? (\n                            <Grid item lg={12}>\n                                <>\n                                    <Button\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        onClick={() => edit(aboutData.id)}>\n                                        Edit\n                                    </Button>\n                                    <Button\n                                        className={classes.leftMargin}\n                                        size=\"small\"\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        onClick={() =>\n                                            handleDelete(aboutData.id)\n                                        }>\n                                        Delete\n                                    </Button>\n                                </>\n                            </Grid>\n                        ) : (\n                            \"\"\n                        )}\n                    </Grid>\n                </Grid>\n            </Container>\n            <EditModal\n                open={openEditModal}\n                handleClose={handleCloseEditModal}\n                data={editData}\n                // setEducationData={setEducationData}\n            />\n            <AddModal open={openAddModal} handleClose={handleCloseAddModal} />\n        </Container>\n    );\n}\n\nexport default About;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"100px\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.orange + `!important`,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.orange + `!important`,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            marginTop: \"20px\",\n        },\n        centerGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentPadding: {\n            padding: \"32px 0\",\n        },\n        paper: {\n            position: \"absolute\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid #000\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            top: `50%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        },\n        leftMargin: {\n            marginLeft: \"16px\",\n        },\n        title: {\n            color: theme.orange,\n        },\n    })\n);\n","import React, { Fragment } from \"react\";\nimport {\n    TimelineItem,\n    TimelineSeparator,\n    TimelineDot,\n    TimelineConnector,\n    TimelineContent,\n    TimelineOppositeContent,\n} from \"@material-ui/lab\";\nimport { useStyles as styles } from \"./styles\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\n\nexport function TimelineComponent(props) {\n    const classes = styles();\n    return (\n        <Fragment>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{\n                        flex: 0,\n                        padding: 0,\n                    }}></TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Grid container className={classes.contentPadding}>\n                        <Grid item lg={9} xs={12}>\n                            <Grid container className={classes.centerGrid}>\n                                <Grid item lg={12}>\n                                    <Typography\n                                        variant=\"h5\"\n                                        className={classes.title}>\n                                        {props.data.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={12}>\n                                    <Typography variant=\"body1\">\n                                        {props.data.degree}\n                                        {props.data.course\n                                            ? \", \" + props.data.course\n                                            : null}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={12}>\n                                    <Typography variant=\"body1\">\n                                        Grade: {props.data.grade}{\" \"}\n                                        {props.data.gradePoint}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={12}>\n                                    {props.role === \"admin\" ? (\n                                        <>\n                                            <Button\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    props.handleOpenEditModal(\n                                                        props.id\n                                                    )\n                                                }>\n                                                Edit\n                                            </Button>\n                                            <Button\n                                                className={classes.leftMargin}\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={() =>\n                                                    props.handleDelete(props.id)\n                                                }>\n                                                Delete\n                                            </Button>\n                                        </>\n                                    ) : null}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                        <Grid item lg={3} xs={12}>\n                            <Typography variant=\"body1\" align=\"right\">\n                                {props.data.startDate} - {props.data.endDate}\n                            </Typography>\n                            <Typography variant=\"body1\" align=\"right\">\n                                {props.data.location}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </TimelineContent>\n            </TimelineItem>\n        </Fragment>\n    );\n}\n\nexport function TimelineLastComponent() {\n    return (\n        <Fragment>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{\n                        flex: 0,\n                        padding: 0,\n                    }}></TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot />\n                </TimelineSeparator>\n                <TimelineContent></TimelineContent>\n            </TimelineItem>\n        </Fragment>\n    );\n}\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction EditModal({ openEditModal, handleCloseEditModal, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={openEditModal}\n            onClose={handleCloseEditModal}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        degree: data?.data.degree,\n                        course: data?.data.course,\n                        grade: data?.data.grade,\n                        gradePoint: data?.data.gradePoint,\n                        startDate: data?.data.startDate,\n                        endDate: data?.data.endDate,\n                        location: data?.data.location,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.degree) {\n                            errors.degree = \"Required\";\n                        }\n                        if (!values.grade) {\n                            errors.grade = \"Required\";\n                        }\n                        if (!values.gradePoint) {\n                            errors.gradePoint = \"Required\";\n                        }\n                        if (!values.startDate) {\n                            errors.startDate = \"Required\";\n                        }\n                        if (!values.endDate) {\n                            errors.endDate = \"Required\";\n                        }\n                        if (!values.location) {\n                            errors.location = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                            console.log(values);\n                        }, 500);\n                        firebase.db\n                            .collection(\"Education\")\n                            .doc(data.id)\n                            .update(values)\n                            .then(() => {\n                                setSubmitting(false);\n                                handleCloseEditModal();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"degree\"\n                                name=\"degree\"\n                                label=\"Degree\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"course\"\n                                name=\"course\"\n                                label=\"Course\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"grade\"\n                                name=\"grade\"\n                                label=\"Grade\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"gradePoint\"\n                                name=\"gradePoint\"\n                                label=\"Grade Point\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"startDate\"\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"endDate\"\n                                name=\"endDate\"\n                                label=\"End Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"location\"\n                                name=\"location\"\n                                label=\"Location\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default EditModal;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction AddModal({ openAddModal, handleCloseAddModal, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={openAddModal}\n            onClose={handleCloseAddModal}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: \"\",\n                        degree: \"\",\n                        course: \"\",\n                        grade: \"\",\n                        gradePoint: \"\",\n                        startDate: \"\",\n                        endDate: \"\",\n                        location: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.degree) {\n                            errors.degree = \"Required\";\n                        }\n                        if (!values.grade) {\n                            errors.grade = \"Required\";\n                        }\n                        if (!values.gradePoint) {\n                            errors.gradePoint = \"Required\";\n                        }\n                        if (!values.startDate) {\n                            errors.startDate = \"Required\";\n                        }\n                        if (!values.endDate) {\n                            errors.endDate = \"Required\";\n                        }\n                        if (!values.location) {\n                            errors.location = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        firebase.db\n                            .collection(\"Education\")\n                            .add(values)\n                            .then((doc) => {\n                                // console.log(doc);\n                                setSubmitting(false);\n                                handleCloseAddModal();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"degree\"\n                                name=\"degree\"\n                                label=\"Degree\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"course\"\n                                name=\"course\"\n                                label=\"Course\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"grade\"\n                                name=\"grade\"\n                                label=\"Grade\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"gradePoint\"\n                                name=\"gradePoint\"\n                                label=\"Grade Point\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"startDate\"\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"endDate\"\n                                name=\"endDate\"\n                                label=\"End Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"location\"\n                                name=\"location\"\n                                label=\"Location\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default AddModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Divider, Grid, Button } from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\nimport { TimelineComponent, TimelineLastComponent } from \"./TimelineComponent\";\nimport {\n    StyledTypography as Typography,\n    StyledTimeline as Timeline,\n} from \"../../styles\";\nimport EditModal from \"./editModal\";\nimport firebase from \"../../firebase\";\nimport { RoleContext } from \"../../RoleContext\";\nimport AddModal from \"./addModal\";\n\n// import educationData from \"../../static/data/education.json\";\n\nfunction About() {\n    const { role } = useContext(RoleContext);\n    const classes = styles();\n    const [educationData, setEducationData] = useState([]);\n    const [editData, setEditData] = useState();\n    const [addData, setAddData] = useState();\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [openAddModal, setOpenAddModal] = useState(false);\n\n    const [reload, setReload] = useState(true);\n\n    useEffect(() => {\n        let data = [];\n        firebase.db\n            .collection(\"Education\")\n            .orderBy(\"startDate\", \"desc\")\n            .get()\n            .then(async (querySnapshot) => {\n                await querySnapshot.docs.forEach((doc) => {\n                    data.push({ id: doc.id, data: doc.data() });\n                });\n                setEducationData(data);\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n    }, [reload]);\n\n    const handleOpenEditModal = (id) => {\n        // console.log(id);\n        setEditData(educationData.find((item) => item.id === id));\n        setOpenEditModal(true);\n    };\n\n    const handleOpenAddModal = () => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseEditModal = (id) => {\n        setOpenEditModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleCloseAddModal = (id) => {\n        setOpenAddModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            firebase.db\n                .collection(\"Education\")\n                .doc(id)\n                .delete()\n                .then(() => {\n                    setReload((prev) => !prev);\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container>\n                <Grid item lg={2}>\n                    <Typography variant=\"h4\" className={classes.heading}>\n                        Education\n                    </Typography>\n                    {role === \"admin\" ? (\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleOpenAddModal}>\n                            Add Education\n                        </Button>\n                    ) : (\n                        \"\"\n                    )}\n                </Grid>\n                <Grid item lg={10} className={classes.headingGrid}>\n                    <Divider className={classes.divider} />\n                </Grid>\n            </Grid>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container justify=\"center\">\n                    <Grid item lg={10}>\n                        <Timeline>\n                            {educationData?.map((doc, index) => {\n                                return (\n                                    <TimelineComponent\n                                        data={doc.data}\n                                        key={index}\n                                        id={doc.id}\n                                        handleOpenEditModal={\n                                            handleOpenEditModal\n                                        }\n                                        handleDelete={handleDelete}\n                                        role={role}\n                                    />\n                                );\n                            })}\n                            <TimelineLastComponent />\n                        </Timeline>\n                    </Grid>\n                </Grid>\n            </Container>\n            <EditModal\n                openEditModal={openEditModal}\n                handleCloseEditModal={handleCloseEditModal}\n                data={editData}\n                // setEducationData={setEducationData}\n            />\n            <AddModal\n                openAddModal={openAddModal}\n                handleCloseAddModal={handleCloseAddModal}\n                data={addData}\n            />\n        </Container>\n    );\n}\n\nexport default About;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"100px\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.orange + `!important`,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.orange + `!important`,\n            width: \"100%\",\n        },\n\n        contentContainer: {\n            marginTop: \"20px\",\n        },\n        centerGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentPadding: {\n            padding: \"32px 0\",\n        },\n        desc: {\n            marginTop: \"12px\",\n            \"& p\": {\n                whiteSpace: \"pre-wrap\",\n            },\n        },\n        paper: {\n            position: \"absolute\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid #000\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            top: `50%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        },\n        leftMargin: {\n            marginLeft: \"16px\",\n        },\n        title: {\n            color: theme.orange,\n        },\n    })\n);\n","import React, { Fragment, useState } from \"react\";\nimport {\n    TimelineItem,\n    TimelineSeparator,\n    TimelineDot,\n    TimelineConnector,\n    TimelineContent,\n    TimelineOppositeContent,\n} from \"@material-ui/lab\";\nimport { useStyles as styles } from \"./styles\";\nimport { Grid, Typography, Button } from \"@material-ui/core\";\nimport moment from \"moment\";\n\nexport function TimelineComponent(props) {\n    const classes = styles();\n    let duration;\n    let endDate = props.data.endDate;\n    if (props.data.endDate === \"Present\") {\n        endDate = moment().format(\"MMM YYYY\");\n        console.log(endDate);\n    }\n    const durationMonths = moment(endDate, \"MMM YYYY\").diff(\n        moment(props.data.startDate),\n        \"months\"\n    );\n    const durationYear = moment(endDate, \"MMM YYYY\").diff(\n        moment(props.data.startDate),\n        \"years\"\n    );\n\n    duration =\n        durationYear === 0\n            ? durationMonths > 1\n                ? durationMonths + ` months`\n                : durationMonths + ` month`\n            : durationYear > 1\n            ? durationYear + ` years`\n            : durationYear + ` year`;\n\n    return (\n        <Fragment>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{\n                        flex: 0,\n                        padding: 0,\n                    }}></TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot />\n                    <TimelineConnector />\n                </TimelineSeparator>\n                <TimelineContent>\n                    <Grid container className={classes.contentPadding}>\n                        <Grid item lg={12}>\n                            <Grid container className={classes.centerGrid}>\n                                <Grid item lg={6} xs={12}>\n                                    <Typography\n                                        variant=\"h5\"\n                                        className={classes.title}>\n                                        {props.data.name}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={6} xs={12}>\n                                    <Typography\n                                        variant=\"body1\"\n                                        align={\n                                            window.innerWidth < 600\n                                                ? \"left\"\n                                                : \"right\"\n                                        }>\n                                        {props.data.location}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={12} xs={12}>\n                                    <Typography variant=\"body1\">\n                                        {props.data.designation} ·{\" \"}\n                                        {props.data.type}\n                                    </Typography>\n                                </Grid>\n                                <Grid item lg={12} xs={12}>\n                                    <Typography variant=\"body1\">\n                                        {props.data.startDate} -{\" \"}\n                                        {props.data.endDate} · {duration}\n                                    </Typography>\n                                </Grid>\n                                <Grid\n                                    item\n                                    lg={12}\n                                    xs={12}\n                                    className={classes.desc}>\n                                    <Typography variant=\"body2\">\n                                        {props.data.desc}\n                                    </Typography>\n                                </Grid>\n                                {props.role === \"admin\" ? (\n                                    <Grid item lg={12}>\n                                        <>\n                                            <Button\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    props.edit(props.id)\n                                                }>\n                                                Edit\n                                            </Button>\n                                            <Button\n                                                className={classes.leftMargin}\n                                                size=\"small\"\n                                                variant=\"contained\"\n                                                color=\"secondary\"\n                                                onClick={() =>\n                                                    props.handleDelete(props.id)\n                                                }>\n                                                Delete\n                                            </Button>\n                                        </>\n                                    </Grid>\n                                ) : (\n                                    \"\"\n                                )}\n                            </Grid>\n                        </Grid>\n                        {/* <Grid item lg={3}>\n                            <Typography variant=\"body1\" align=\"right\">\n                                {props.data.location}\n                            </Typography>\n                        </Grid> */}\n                    </Grid>\n                </TimelineContent>\n            </TimelineItem>\n        </Fragment>\n    );\n}\n\nexport function TimelineLastComponent() {\n    return (\n        <Fragment>\n            <TimelineItem>\n                <TimelineOppositeContent\n                    style={{\n                        flex: 0,\n                        padding: 0,\n                    }}></TimelineOppositeContent>\n                <TimelineSeparator>\n                    <TimelineDot />\n                </TimelineSeparator>\n                <TimelineContent></TimelineContent>\n            </TimelineItem>\n        </Fragment>\n    );\n}\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction EditModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        desc: data?.data.desc,\n                        designation: data?.data.designation,\n                        type: data?.data.type,\n                        startDate: data?.data.startDate,\n                        endDate: data?.data.endDate,\n                        location: data?.data.location,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.desc) {\n                            errors.desc = \"Required\";\n                        }\n                        if (!values.startDate) {\n                            errors.startDate = \"Required\";\n                        }\n                        if (!values.endDate) {\n                            errors.endDate = \"Required\";\n                        }\n                        if (!values.location) {\n                            errors.location = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(data.id);\n                        // setTimeout(() => {\n                        //     console.log(values);\n                        // }, 500);\n                        firebase.db\n                            .collection(\"Experience\")\n                            .doc(data.id)\n                            .update(values)\n                            .then(() => {\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"desc\"\n                                name=\"desc\"\n                                label=\"Description\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"type\"\n                                name=\"type\"\n                                label=\"Type\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"designation\"\n                                name=\"designation\"\n                                label=\"Designation\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"startDate\"\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"endDate\"\n                                name=\"endDate\"\n                                label=\"End Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"location\"\n                                name=\"location\"\n                                label=\"Location\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default EditModal;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction AddModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: \"\",\n                        desc: \"\",\n                        designation: \"\",\n                        type: \"\",\n                        startDate: \"\",\n                        endDate: \"\",\n                        location: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.desc) {\n                            errors.desc = \"Required\";\n                        }\n                        if (!values.startDate) {\n                            errors.startDate = \"Required\";\n                        }\n                        if (!values.endDate) {\n                            errors.endDate = \"Required\";\n                        }\n                        if (!values.location) {\n                            errors.location = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        firebase.db\n                            .collection(\"Experience\")\n                            .add(values)\n                            .then((doc) => {\n                                // console.log(doc);\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"desc\"\n                                name=\"desc\"\n                                label=\"Description\"\n                                fullWidth\n                                multiline\n                                rows={4}\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"type\"\n                                name=\"type\"\n                                label=\"Type\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"designation\"\n                                name=\"designation\"\n                                label=\"Designation\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"startDate\"\n                                name=\"startDate\"\n                                label=\"Start Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"endDate\"\n                                name=\"endDate\"\n                                label=\"End Date\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"location\"\n                                name=\"location\"\n                                label=\"Location\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default AddModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Divider, Grid, Button } from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\nimport {\n    StyledTypography as Typography,\n    StyledTimeline as Timeline,\n} from \"../../styles\";\nimport { TimelineComponent, TimelineLastComponent } from \"./TimelineComponent\";\nimport EditModal from \"./editModal\";\nimport AddModal from \"./addModal\";\nimport firebase from \"../../firebase\";\nimport moment from \"moment\";\nimport { RoleContext } from \"../../RoleContext\";\n\nfunction Experience() {\n    const classes = styles();\n    const { role } = useContext(RoleContext);\n    const [experienceData, setExperienceData] = useState([]);\n    const [editData, setEditData] = useState();\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [openAddModal, setOpenAddModal] = useState(false);\n    const [reload, setReload] = useState(true);\n\n    useEffect(() => {\n        console.log(\"REnder\");\n        let data = [];\n        firebase.db\n            .collection(\"Experience\")\n            .get()\n            .then(async (querySnapshot) => {\n                await querySnapshot.docs.forEach((doc) => {\n                    data.push({ id: doc.id, data: doc.data() });\n                });\n                data.sort((x, y) => {\n                    return moment(y.data.startDate).diff(\n                        moment(x.data.startDate),\n                        \"days\"\n                    );\n                });\n                setExperienceData(data);\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n    }, [reload]);\n\n    const edit = (id) => {\n        console.log(id);\n        setEditData(experienceData.find((item) => item.id === id));\n        setOpenEditModal(true);\n    };\n\n    const handleCloseEditModal = (id) => {\n        setOpenEditModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleOpenAddModal = (id) => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseAddModal = (id) => {\n        setOpenAddModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            firebase.db\n                .collection(\"Experience\")\n                .doc(id)\n                .delete()\n                .then(() => {\n                    setReload((prev) => !prev);\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container>\n                <Grid item md={2}>\n                    <Typography variant=\"h4\" className={classes.heading}>\n                        Experience\n                    </Typography>\n                    {role === \"admin\" ? (\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleOpenAddModal}>\n                            Add Experience\n                        </Button>\n                    ) : (\n                        \"\"\n                    )}\n                </Grid>\n                <Grid item md={10} className={classes.contentContainer}>\n                    <Divider className={classes.divider} />\n                </Grid>\n            </Grid>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container justify=\"center\">\n                    <Grid item md={10}>\n                        <Timeline>\n                            {experienceData.map((doc, index) => {\n                                return (\n                                    <TimelineComponent\n                                        data={doc.data}\n                                        key={index}\n                                        id={doc.id}\n                                        edit={edit}\n                                        handleDelete={handleDelete}\n                                        role={role}\n                                    />\n                                );\n                            })}\n                            <TimelineLastComponent />\n                        </Timeline>\n                    </Grid>\n                </Grid>\n            </Container>\n            <EditModal\n                open={openEditModal}\n                handleClose={handleCloseEditModal}\n                data={editData}\n                // setEducationData={setEducationData}\n            />\n            <AddModal open={openAddModal} handleClose={handleCloseAddModal} />\n        </Container>\n    );\n}\n\nexport default Experience;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\nimport { Typography, LinearProgress, Tooltip } from \"@material-ui/core\";\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"100px\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.orange + `!important`,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.orange + `!important`,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            marginTop: \"20px\",\n            color: theme.secondary,\n        },\n        marginTop: {\n            marginTop: \"48px\",\n        },\n        paper: {\n            position: \"absolute\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid #000\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            top: `50%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        },\n        leftMargin: {\n            marginLeft: \"16px\",\n        },\n    })\n);\n\nexport const StyledProgress = styled(LinearProgress)((props) => ({\n    background: \"#ffffff\",\n    height: \"14px\",\n    borderRadius: \"4px\",\n    \"& div\": {\n        background: props.theme.orange,\n    },\n}));\n\nexport const StyledTooltip = styled(Tooltip)((props) => ({\n    color: props.theme.secondary,\n}));\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction EditModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        level: data?.data.level,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.level) {\n                            errors.level = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(data.id);\n                        // setTimeout(() => {\n                        //     console.log(values);\n                        // }, 500);\n                        firebase.db\n                            .collection(\"Skills\")\n                            .doc(data.id)\n                            .update(values)\n                            .then(() => {\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                name=\"level\"\n                                type=\"number\"\n                                label=\"Level\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default EditModal;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField, InputBase } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\n\nfunction AddModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: \"\",\n                        level: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.level) {\n                            errors.desc = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        console.log(values);\n                        firebase.db\n                            .collection(\"Skills\")\n                            .add(values)\n                            .then((doc) => {\n                                // console.log(doc);\n                                setSubmitting(false);\n                                handleClose();\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                type=\"number\"\n                                name=\"level\"\n                                label=\"Level\"\n                                fullWidth\n                            />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default AddModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Divider, Grid, Box, Button } from \"@material-ui/core\";\nimport {\n    useStyles as styles,\n    StyledProgress as LinearProgress,\n    StyledTooltip as Tooltip,\n} from \"./styles\";\nimport { StyledTypography as Typography } from \"../../styles\";\n// import skillsData from \"../../static/data/skills.json\";\nimport EditModal from \"./editModal\";\nimport AddModal from \"./addModal\";\nimport firebase from \"../../firebase\";\nimport { RoleContext } from \"../../RoleContext\";\n\nfunction Skills() {\n    const classes = styles();\n    const [skillsData, setSkillsData] = useState([]);\n    const [editData, setEditData] = useState();\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [openAddModal, setOpenAddModal] = useState(false);\n    const [reload, setReload] = useState(true);\n    const { role } = useContext(RoleContext);\n\n    const handleOpenAddModal = (id) => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseEditModal = (id) => {\n        setOpenEditModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleCloseAddModal = (id) => {\n        setOpenAddModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const edit = (id) => {\n        console.log(id);\n        setEditData(skillsData.find((item) => item.id === id));\n        setOpenEditModal(true);\n    };\n\n    const handleDelete = (id) => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            firebase.db\n                .collection(\"Skills\")\n                .doc(id)\n                .delete()\n                .then(() => {\n                    setReload((prev) => !prev);\n                })\n                .catch((error) => console.log(error));\n        }\n    };\n    useEffect(() => {\n        console.log(\"REnder\");\n        let data = [];\n        firebase.db\n            .collection(\"Skills\")\n            .get()\n            .then(async (querySnapshot) => {\n                await querySnapshot.docs.forEach((doc) => {\n                    data.push({ id: doc.id, data: doc.data() });\n                });\n                console.log(data);\n                setSkillsData(data);\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n    }, [reload]);\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container>\n                <Grid item lg={3} md={3}>\n                    <Typography variant=\"h4\" className={classes.heading}>\n                        Technical Skills\n                    </Typography>\n                    {role === \"admin\" ? (\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleOpenAddModal}>\n                            Add Skills\n                        </Button>\n                    ) : (\n                        \"\"\n                    )}\n                </Grid>\n                <Grid item lg={9} md={9} className={classes.headingGrid}>\n                    <Divider className={classes.divider} />\n                </Grid>\n            </Grid>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container justify=\"center\" spacing={10}>\n                    <Grid item lg={5} md={5}>\n                        {skillsData\n                            .slice(0, Math.ceil(skillsData.length / 2))\n                            .map((data, index) => {\n                                return (\n                                    <Box\n                                        className={classes.marginTop}\n                                        key={index}>\n                                        <Typography variant=\"h6\">\n                                            {data.data.name}\n                                        </Typography>\n                                        <Tooltip\n                                            arrow\n                                            title={data.data.level}\n                                            placement=\"top-end\">\n                                            <LinearProgress\n                                                variant=\"determinate\"\n                                                value={data.data.level}\n                                            />\n                                        </Tooltip>\n                                        {role === \"admin\" ? (\n                                            <Grid item lg={12}>\n                                                <>\n                                                    <Button\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={() =>\n                                                            edit(data.id)\n                                                        }>\n                                                        Edit\n                                                    </Button>\n                                                    <Button\n                                                        className={\n                                                            classes.leftMargin\n                                                        }\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"secondary\"\n                                                        onClick={() =>\n                                                            handleDelete(\n                                                                data.id\n                                                            )\n                                                        }>\n                                                        Delete\n                                                    </Button>\n                                                </>\n                                            </Grid>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Box>\n                                );\n                            })}\n                    </Grid>\n                    <Grid item lg={5} md={5}>\n                        {skillsData\n                            .slice(-Math.floor(skillsData.length / 2))\n                            .map((data, index) => {\n                                return (\n                                    <Box\n                                        className={classes.marginTop}\n                                        key={index}>\n                                        <Typography variant=\"h6\">\n                                            {data.data.name}\n                                        </Typography>\n                                        <Tooltip\n                                            arrow\n                                            title={data.data.level}\n                                            placement=\"top-end\">\n                                            <LinearProgress\n                                                variant=\"determinate\"\n                                                value={data.data.level}\n                                            />\n                                        </Tooltip>\n                                        {role === \"admin\" ? (\n                                            <Grid item lg={12}>\n                                                <>\n                                                    <Button\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={() =>\n                                                            edit(data.id)\n                                                        }>\n                                                        Edit\n                                                    </Button>\n                                                    <Button\n                                                        className={\n                                                            classes.leftMargin\n                                                        }\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"secondary\"\n                                                        onClick={() =>\n                                                            handleDelete(\n                                                                data.id\n                                                            )\n                                                        }>\n                                                        Delete\n                                                    </Button>\n                                                </>\n                                            </Grid>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Box>\n                                );\n                            })}\n                    </Grid>\n                </Grid>\n            </Container>\n            <EditModal\n                open={openEditModal}\n                handleClose={handleCloseEditModal}\n                data={editData}\n                // setEducationData={setEducationData}\n            />\n            <AddModal open={openAddModal} handleClose={handleCloseAddModal} />\n        </Container>\n    );\n}\n\nexport default Skills;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"100px\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.orange + `!important`,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.secondary,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            marginTop: \"55px\",\n            color: theme.secondary,\n        },\n        img: {\n            height: 140,\n            objectFit: \"fill\",\n        },\n        allProject: {\n            textAlign: \"end\",\n            marginTop: \"25px\",\n            \"& a\": {\n                textDecoration: \"none\",\n                color: theme.secondary,\n                fontSize: \"25px\",\n            },\n        },\n        paper: {\n            position: \"absolute\",\n            width: 400,\n            backgroundColor: theme.palette.background.paper,\n            border: \"2px solid #000\",\n            boxShadow: theme.shadows[5],\n            padding: theme.spacing(2, 4, 3),\n            top: `50%`,\n            left: `50%`,\n            transform: `translate(-50%, -50%)`,\n        },\n        leftMargin: {\n            marginLeft: \"16px\",\n        },\n        centre: {\n            textAlign: \"center\",\n        },\n    })\n);\n","import React from \"react\";\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardMedia,\n    CardContent,\n    CardActions,\n    Button,\n    Typography,\n} from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\n\nfunction ProjectCard(props) {\n    const classes = styles();\n\n    return (\n        <Card>\n            <CardActionArea>\n                <CardMedia\n                    className={classes.img}\n                    component=\"img\"\n                    image={props.img ? `${props.img}` : `/angular_1.png`}\n                />\n                <CardContent>\n                    <Typography\n                        // color=\"black\"\n                        className={classes.centre}\n                        gutterBottom\n                        variant=\"h5\"\n                        component=\"h2\">\n                        {props.projectTitle}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    );\n}\n\nexport default ProjectCard;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField, SimpleFileUpload } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\nimport _ from \"lodash\";\n\nfunction EditModal({ open, handleClose, data }) {\n    const classes = styles();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Edit: </h3>\n                <Formik\n                    initialValues={{\n                        name: data?.data.name,\n                        image: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        // if (!values.image) {\n                        //     errors.image = \"Required\";\n                        // }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        if (values.image) {\n                            const uploadTask = firebase.storage\n                                .ref(\n                                    `/images/${values.image.name}_${new Date()}`\n                                )\n                                .put(values.image);\n                            uploadTask.on(\n                                \"state_changed\",\n                                console.log,\n                                console.error,\n                                () => {\n                                    firebase.storage\n                                        .ref(\"images\")\n                                        .child(values.image.name)\n                                        .getDownloadURL()\n                                        .then((url) => {\n                                            // setImageURL(url);\n                                            values.imageURL = url;\n                                            console.log(\n                                                _.omit(values, \"image\")\n                                            );\n                                            firebase.db\n                                                .collection(\"Projects\")\n                                                .doc(data.id)\n                                                .update(_.omit(values, \"image\"))\n                                                .then((doc) => {\n                                                    // console.log(doc);\n                                                    setSubmitting(false);\n                                                    handleClose();\n                                                })\n                                                .catch((error) =>\n                                                    console.log(error)\n                                                );\n                                        });\n                                }\n                            );\n                        } else {\n                            firebase.db\n                                .collection(\"Projects\")\n                                .doc(data.id)\n                                .update(_.omit(values, \"image\"))\n                                .then((doc) => {\n                                    // console.log(doc);\n                                    setSubmitting(false);\n                                    handleClose();\n                                })\n                                .catch((error) => console.log(error));\n                        }\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={SimpleFileUpload}\n                                name=\"image\"\n                                label=\"Image\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default EditModal;\n","import React, { useState } from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button, LinearProgress, Modal } from \"@material-ui/core\";\nimport { TextField, SimpleFileUpload } from \"formik-material-ui\";\nimport firebase from \"../../firebase\";\nimport _ from \"lodash\";\n\nfunction AddModal({ open, handleClose, data }) {\n    const classes = styles();\n    const [imageURL, setImageURL] = useState();\n    return (\n        <Modal\n            open={open}\n            onClose={handleClose}\n            aria-labelledby=\"simple-modal-title\"\n            aria-describedby=\"simple-modal-description\">\n            <div className={classes.paper}>\n                <h3>Add: </h3>\n                <Formik\n                    initialValues={{\n                        name: \"\",\n                        image: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.name) {\n                            errors.name = \"Required\";\n                        }\n                        if (!values.image) {\n                            errors.image = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        setSubmitting(true);\n                        const imageName = values.image.name + \"_\" + new Date();\n                        const uploadTask = firebase.storage\n                            .ref(`/images/${imageName}`)\n                            .put(values.image);\n                        uploadTask.on(\n                            \"state_changed\",\n                            console.log,\n                            console.error,\n                            async () => {\n                                try {\n                                    let imgUrl = await firebase.storage\n                                        .ref(\"images\")\n                                        .child(imageName)\n                                        .getDownloadURL();\n                                    values.imageURL = imgUrl;\n\n                                    const projectDetails = await firebase.db\n                                        .collection(\"ProjectDetails\")\n                                        .add({});\n\n                                    const project = await firebase.db\n                                        .collection(\"Projects\")\n                                        .add(\n                                            _.omit(\n                                                {\n                                                    ...values,\n                                                    projectDetails:\n                                                        projectDetails.id,\n                                                },\n                                                \"image\"\n                                            )\n                                        );\n\n                                    const projectDetailsUpdated = await firebase.db\n                                        .collection(\"ProjectDetails\")\n                                        .doc(projectDetails.id)\n                                        .update({ project: project.id });\n                                    setSubmitting(false);\n                                    handleClose();\n                                } catch (error) {\n                                    setSubmitting(false);\n\n                                    console.log(console.error(error));\n                                }\n                            }\n                        );\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form>\n                            <Field\n                                component={TextField}\n                                name=\"name\"\n                                type=\"name\"\n                                label=\"Name\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={SimpleFileUpload}\n                                name=\"image\"\n                                label=\"Image\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Modal>\n    );\n}\n\nexport default AddModal;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Divider, Grid, Button } from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\nimport ProjectCard from \"./projectCard\";\nimport Flip from \"react-reveal/Flip\";\nimport Fade from \"react-reveal/Fade\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"../../firebase\";\nimport { StyledTypography as Typography } from \"../../styles\";\nimport EditModal from \"./editModal\";\nimport AddModal from \"./addModal\";\nimport { RoleContext } from \"../../RoleContext\";\n\nfunction Projects() {\n    const classes = styles();\n    const [projectsData, setProjectsData] = useState([]);\n    const [editData, setEditData] = useState();\n    const [openEditModal, setOpenEditModal] = useState(false);\n    const [openAddModal, setOpenAddModal] = useState(false);\n    const [reload, setReload] = useState(true);\n    const { role } = useContext(RoleContext);\n\n    const edit = (id) => {\n        console.log(id);\n        setEditData(projectsData.find((item) => item.id === id));\n        setOpenEditModal(true);\n    };\n\n    const handleCloseEditModal = (id) => {\n        setOpenEditModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleOpenAddModal = (id) => {\n        setOpenAddModal(true);\n    };\n\n    const handleCloseAddModal = (id) => {\n        setOpenAddModal(false);\n        setReload((prev) => !prev);\n    };\n\n    const handleDelete = (doc) => {\n        if (window.confirm(\"Do you want to delete this record?\")) {\n            firebase.storage\n                .refFromURL(doc.data.imageURL)\n                .delete()\n                .then(() => {\n                    console.log(\"Image deleted\");\n                })\n                .catch((err) => {\n                    console.log(err);\n                });\n            firebase.db\n                .collection(\"ProjectDetails\")\n                .doc(doc.data.projectDetails)\n                .delete()\n                .then(() => {\n                    firebase.db\n                        .collection(\"Projects\")\n                        .doc(doc.id)\n                        .delete()\n                        .then(() => {\n                            setReload((prev) => !prev);\n                        })\n                        .catch((error) => console.log(error));\n                });\n        }\n    };\n    useEffect(() => {\n        console.log(\"REnder\");\n        let data = [];\n        firebase.db\n            .collection(\"Projects\")\n            .get()\n            .then(async (querySnapshot) => {\n                await querySnapshot.docs.forEach((doc) => {\n                    data.push({ id: doc.id, data: doc.data() });\n                });\n                console.log(data);\n                setProjectsData(data);\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n    }, [reload]);\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container>\n                <Grid item lg={2} md={2}>\n                    <Typography variant=\"h4\" className={classes.heading}>\n                        Projects\n                    </Typography>\n                    {role === \"admin\" ? (\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleOpenAddModal}>\n                            Add Project\n                        </Button>\n                    ) : (\n                        \"\"\n                    )}\n                </Grid>\n                <Grid item lg={10} md={10} className={classes.headingGrid}>\n                    <Divider className={classes.divider} />\n                </Grid>\n            </Grid>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container justify=\"center\">\n                    <Grid item md={10}>\n                        <Grid container justify=\"space-between\" spacing={10}>\n                            {projectsData.map((doc, index) => {\n                                return (\n                                    <Grid item md={4} key={doc.id}>\n                                        <Link\n                                            to={{\n                                                pathname: \"project/\" + doc.id,\n                                                state: {\n                                                    projectTitle: doc.data.name,\n                                                    projectId: doc.id,\n                                                    projectDetailsId:\n                                                        doc.data.projectDetails,\n                                                },\n                                            }}>\n                                            <ProjectCard\n                                                key={index}\n                                                projectTitle={doc.data.name}\n                                                img={doc.data.imageURL}\n                                            />\n                                        </Link>\n                                        {role === \"admin\" ? (\n                                            <Grid item lg={12}>\n                                                <>\n                                                    <Button\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        onClick={() =>\n                                                            edit(doc.id)\n                                                        }>\n                                                        Edit\n                                                    </Button>\n                                                    <Button\n                                                        className={\n                                                            classes.leftMargin\n                                                        }\n                                                        size=\"small\"\n                                                        variant=\"contained\"\n                                                        color=\"secondary\"\n                                                        onClick={() =>\n                                                            handleDelete(doc)\n                                                        }>\n                                                        Delete\n                                                    </Button>\n                                                </>\n                                            </Grid>\n                                        ) : (\n                                            \"\"\n                                        )}\n                                    </Grid>\n                                );\n                            })}\n                        </Grid>\n                    </Grid>\n                </Grid>\n            </Container>\n\n            <EditModal\n                open={openEditModal}\n                handleClose={handleCloseEditModal}\n                data={editData}\n                // setEducationData={setEducationData}\n            />\n            <AddModal open={openAddModal} handleClose={handleCloseAddModal} />\n        </Container>\n    );\n}\n\nexport default Projects;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"100px\",\n        },\n        heading: {\n            textAlign: \"center\",\n            color: theme.secondary,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.secondary,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            marginTop: \"20px\",\n            color: theme.secondary,\n        },\n        icons: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            height: \"300px\",\n            marginTop: \"48px\",\n            \"& > *\": {\n                textDecoration: \"none\",\n                color: theme.secondary,\n                padding: \"15px\",\n            },\n        },\n        backToTop: {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            margin: \"40px 0\",\n            \"& span\": {\n                cursor: \"pointer\",\n                textDecoration: \"underline\",\n            },\n        },\n    })\n);\n","import React from \"react\";\nimport { Container, Divider, Grid, Link } from \"@material-ui/core\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport InstagramIcon from \"@material-ui/icons/Instagram\";\nimport { useStyles as styles } from \"./styles\";\nimport { StyledTypography as Typography } from \"../../styles\";\n\nfunction Contact() {\n    const classes = styles();\n    const backToTop = () => {\n        console.log(\"here\");\n        window.scrollTo(0, 0);\n    };\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container>\n                <Grid item md={5} className={classes.headingGrid}>\n                    <Divider className={classes.divider} />\n                </Grid>\n                <Grid item md={2}>\n                    <Typography variant=\"h4\" className={classes.heading}>\n                        Reach Out\n                    </Typography>\n                </Grid>\n                <Grid item md={5} className={classes.headingGrid}>\n                    <Divider className={classes.divider} />\n                </Grid>\n            </Grid>\n            <Container maxWidth=\"lg\" className={classes.contentContainer}>\n                <Grid container justify=\"center\" spacing={10}>\n                    {/* <Grid item md={10}>\n                        ankit1738@gmail.com\n                    </Grid> */}\n                    <Grid item md={10} className={classes.icons}>\n                        <Link href=\"#\">\n                            <LinkedInIcon style={{ fontSize: 50 }} />\n                        </Link>\n                        <Link href=\"#\">\n                            <GitHubIcon style={{ fontSize: 50 }} />\n                        </Link>\n\n                        <Link href=\"#\">\n                            <FacebookIcon style={{ fontSize: 50 }} />\n                        </Link>\n\n                        <Link href=\"#\">\n                            <InstagramIcon style={{ fontSize: 50 }} />\n                        </Link>\n                    </Grid>\n                </Grid>\n                <Grid container justify=\"center\">\n                    <Grid item md={10} className={classes.backToTop}>\n                        <span onClick={backToTop}>Back to top</span>\n                    </Grid>\n                </Grid>\n            </Container>\n        </Container>\n    );\n}\n\nexport default Contact;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        root: {\n            marginTop: \"40px\",\n        },\n        heading: {\n            // fontSize: \"32px\",\n            color: theme.secondary,\n        },\n        divider: {\n            height: \"2px\",\n            background: theme.secondary,\n            width: \"100%\",\n        },\n        headingGrid: {\n            display: \"flex\",\n            alignItems: \"center\",\n        },\n        contentContainer: {\n            display: \"flex\",\n            alignItems: \"center\",\n            marginTop: \"64px\",\n            height: \"100%\",\n        },\n        aboutGrid: {\n            \"& div:first-child\": {\n                display: \"flex\",\n                alignItems: \"center\",\n            },\n        },\n        // input: {},\n        form: {\n            \"& >div\": {\n                margin: \"24px 0px\",\n                borderBottom: \"1px solid white\",\n                \"& label, div\": {\n                    color: \"#ffffff\",\n                },\n            },\n            width: \"80%\",\n            margin: \"50px auto\",\n        },\n    })\n);\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Grid, Button } from \"@material-ui/core\";\nimport { useStyles as styles } from \"./styles\";\nimport { StyledTypography as Typography } from \"../../../styles\";\nimport firebase from \"../../../firebase\";\nimport { useLocation, useHistory, Link } from \"react-router-dom\";\nimport { RoleContext } from \"../../../RoleContext\";\n\nfunction Project() {\n    const classes = styles();\n    const location = useLocation();\n    const [projectData, setProjectData] = useState([]);\n    const [reload, setReload] = useState(true);\n    const { role } = useContext(RoleContext);\n\n    const history = useHistory();\n    console.log(location);\n    const handleAdd = () => {\n        history.push({\n            pathname: \"/addEditProjectDetails\",\n            state: {\n                ...location.state,\n                projectData: projectData,\n            },\n        });\n    };\n\n    useEffect(() => {\n        let data = [];\n        firebase.db\n            .collection(\"ProjectDetails\")\n            .doc(location.state.projectDetailsId)\n            .get()\n            .then(async (doc) => {\n                if (!doc.exists) {\n                    console.log(\"No such document!\");\n                } else {\n                    console.log(doc.data());\n                    setProjectData(doc.data());\n                }\n            })\n            .catch((err) => {\n                console.log(err.message);\n            });\n    }, [reload]);\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container className={classes.aboutGrid} spacing={10}>\n                <Grid item className={classes.avatarGrid}>\n                    <Typography variant=\"h3\">\n                        {location.state?.projectTitle}\n                    </Typography>\n                    {role === \"admin\" ? (\n                        <Button\n                            size=\"small\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={handleAdd}>\n                            Add/Edit project details\n                        </Button>\n                    ) : (\n                        \"\"\n                    )}\n                </Grid>\n                <Grid item sm={12} xs={12}>\n                    <Typography variant=\"h5\">About:</Typography>\n                    <Typography variant=\"body1\">{projectData.about}</Typography>\n                </Grid>\n                <Grid item sm={12} xs={12}>\n                    <Typography variant=\"h5\">Technology:</Typography>\n                    <ul>\n                        {projectData.technologies?.split(\", \").map((data) => {\n                            return (\n                                <li>\n                                    <Typography variant=\"p\">{data}</Typography>\n                                </li>\n                            );\n                        })}\n                    </ul>\n                </Grid>\n                <Grid item sm={12} xs={12}>\n                    <Typography variant=\"h5\">\n                        Demo Link: {projectData.demoLink}\n                    </Typography>\n                    <Typography variant=\"h5\">\n                        Github Link: {projectData.githubLink}\n                    </Typography>\n                </Grid>\n                <Link to=\"/#projects\">\n                    <Button size=\"small\" variant=\"contained\" color=\"primary\">\n                        Back\n                    </Button>\n                </Link>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default Project;\n","import { createStyles, makeStyles, styled } from \"@material-ui/core/styles\";\n\nexport const useStyles = makeStyles((theme) =>\n    createStyles({\n        container: {\n            width: \"100%\",\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n        },\n        form: {\n            \"& > div > div \": {\n                \"& :hover\": {\n                    borderBottom: \"none\",\n                },\n                borderBottom: \"1px solid \" + theme.orange,\n            },\n            \"& > div > div:before \": {\n                borderBottom: \"none\",\n            },\n            \"& > div\": {\n                \"& label, div\": {\n                    color: \"#ffffff\",\n                },\n            },\n            border: `2px solid` + theme.orange,\n            borderRadius: \"12px\",\n            width: \"40%\",\n            margin: \"0 auto\",\n            padding: \"24px\",\n        },\n        centreButton: {\n            \"& >button\": {\n                margin: \"0 24px\",\n            },\n            width: \"fit-content\",\n            margin: \"0 auto\",\n            display: \"block\",\n        },\n    })\n);\n","import React, { Fragment, useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { TextField } from \"formik-material-ui\";\nimport { Button, LinearProgress } from \"@material-ui/core\";\nimport firebase from \"../../firebase\";\nimport { useStyles as styles } from \"./styles\";\nimport { useHistory } from \"react-router-dom\";\nimport { RoleContext } from \"../../RoleContext\";\n\nfunction AdminLogin() {\n    const classes = styles();\n    const history = useHistory();\n\n    return (\n        <Fragment>\n            <div className={classes.container}>\n                <Formik\n                    initialValues={{\n                        email: \"\",\n                        password: \"\",\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.email) {\n                            errors.email = \"Required\";\n                        }\n                        if (!values.password) {\n                            errors.password = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={async (values, { setSubmitting }) => {\n                        try {\n                            const { email, password } = values;\n                            await firebase.auth.signInWithEmailAndPassword(\n                                email,\n                                password\n                            );\n                            history.push(\"/\");\n                        } catch (e) {\n                            console.log(e.message);\n                        }\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form className={classes.form}>\n                            <Field\n                                component={TextField}\n                                name=\"email\"\n                                type=\"email\"\n                                label=\"Email\"\n                                fullWidth\n                            />\n                            <br />\n                            <Field\n                                component={TextField}\n                                name=\"password\"\n                                type=\"password\"\n                                label=\"Password\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <div className={classes.centreButton}>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={() => history.goBack()}>\n                                    Back\n                                </Button>\n                                <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    onClick={submitForm}>\n                                    Submit\n                                </Button>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </Fragment>\n    );\n}\n\nexport default AdminLogin;\n","import React from \"react\";\nimport { useStyles as styles } from \"./styles\";\nimport { Formik, Form, Field } from \"formik\";\nimport {\n    Container,\n    Grid,\n    Button,\n    LinearProgress,\n    Modal,\n} from \"@material-ui/core\";\nimport { TextField, InputBase } from \"formik-material-ui\";\nimport firebase from \"../../../firebase\";\nimport { useLocation, useHistory } from \"react-router-dom\";\n\nfunction AddEditProjectDetails() {\n    const classes = styles();\n    const location = useLocation();\n    const history = useHistory();\n    const ids = location.state.ids;\n    const projectData = location.state.projectData;\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.root}>\n            <Grid container className={classes.aboutGrid} spacing={10}>\n                <Formik\n                    initialValues={{\n                        about: projectData.about,\n                        technologies: projectData.technologies,\n                        demoLink: projectData.demoLink,\n                        githubLink: projectData.githubLink,\n                    }}\n                    validate={(values) => {\n                        const errors = {};\n                        if (!values.about) {\n                            errors.about = \"Required\";\n                        }\n                        if (!values.technologies) {\n                            errors.technologies = \"Required\";\n                        }\n                        if (!values.demoLink) {\n                            errors.demoLink = \"Required\";\n                        }\n                        if (!values.githubLink) {\n                            errors.githubLink = \"Required\";\n                        }\n                        return errors;\n                    }}\n                    onSubmit={(values, { setSubmitting }) => {\n                        // setTimeout(() => {\n                        //     console.log(values);\n                        // }, 500);\n                        firebase.db\n                            .collection(\"ProjectDetails\")\n                            .doc(location.state.projectDetailsId)\n                            .update(values)\n                            .then(() => {\n                                setSubmitting(false);\n                                history.push({\n                                    pathname:\n                                        \"/project/\" + location.state.projectId,\n                                    state: {\n                                        ...location.state,\n                                    },\n                                });\n                            })\n                            .catch((error) => console.log(error));\n                    }}>\n                    {({ submitForm, isSubmitting }) => (\n                        <Form className={classes.form}>\n                            <Field\n                                component={TextField}\n                                name=\"about\"\n                                label=\"About\"\n                                multiline\n                                fullWidth\n                            />\n                            <Field\n                                component={TextField}\n                                name=\"technologies\"\n                                label=\"Technologies (Seperate by comma)\"\n                                multiline\n                                fullWidth\n                            />\n                            <Field\n                                component={TextField}\n                                name=\"demoLink\"\n                                label=\"Demo Link\"\n                                fullWidth\n                            />\n                            <Field\n                                component={TextField}\n                                name=\"githubLink\"\n                                label=\"Github Link\"\n                                fullWidth\n                            />\n                            <br />\n                            {isSubmitting && <LinearProgress />}\n                            <br />\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={() => history.goBack()}>\n                                Back\n                            </Button>\n                            <Button\n                                variant=\"contained\"\n                                color=\"primary\"\n                                onClick={submitForm}>\n                                Submit\n                            </Button>\n                        </Form>\n                    )}\n                </Formik>\n            </Grid>\n        </Container>\n    );\n}\n\nexport default AddEditProjectDetails;\n","import React, { Fragment, useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport Header from \"./Views/Header/index\";\nimport About from \"./Views/About/index\";\nimport Education from \"./Views/Education/index\";\nimport Experience from \"./Views/Experience/index\";\nimport Skills from \"./Views/Skills/index\";\nimport Projects from \"./Views/Projects/index\";\nimport Contact from \"./Views/Contact/index\";\n\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { RoleContext } from \"./RoleContext\";\nimport Project from \"./Views/Projects/Project\";\nimport AdminLogin from \"./Views/AdminLogin/index\";\nimport AddEditProject from \"./Views/Projects/Project/addEditProjectDetails.js\";\nimport Fade from \"react-reveal/Fade\";\nimport firebase from \"firebase\";\n\nfunction App() {\n    const theme = createMuiTheme({\n        primary: \"\",\n        secondary: \"#ffffff\",\n        orange: \"#fc7708\",\n        background: \"#18242b\",\n        overrides: {\n            MuiButton: {\n                containedPrimary: {\n                    \"&:hover\": {\n                        backgroundColor: \"#c95400\",\n                    },\n                    backgroundColor: \"#fc7708\",\n                },\n            },\n        },\n    });\n    const [role, setRole] = useState(\"user\");\n\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            console.log(\"Logged In\");\n            setRole(\"admin\");\n        } else {\n            console.log(\"Logged Out\");\n            setRole(\"user\");\n        }\n    });\n\n    // useEffect(() => {}, []);\n    return (\n        <Fragment>\n            <ThemeProvider theme={theme}>\n                <RoleContext.Provider value={{ role: role, setRole: setRole }}>\n                    <BrowserRouter>\n                        <Switch>\n                            <Route path=\"/project/:id\">\n                                <Project />\n                            </Route>\n                            <Route path=\"/adminLogin\">\n                                <AdminLogin />\n                            </Route>\n                            <Route path=\"/addEditProjectDetails\">\n                                <AddEditProject />\n                            </Route>\n                            <Route path=\"/\">\n                                <Header />\n                                <a id=\"about\"></a>\n                                <Fade top>\n                                    <About />\n                                </Fade>\n                                <a id=\"education\"></a>\n                                <Fade left>\n                                    <Education />\n                                </Fade>\n                                <a id=\"experience\"></a>\n                                <Fade right>\n                                    <Experience />\n                                </Fade>\n                                <a id=\"skills\"></a>\n                                <Fade left>\n                                    <Skills />\n                                </Fade>\n                                <a id=\"projects\"></a>\n                                <Fade right>\n                                    <Projects />\n                                </Fade>\n                                <a id=\"contact\"></a>\n                                <Fade left>\n                                    <Contact />\n                                </Fade>\n                            </Route>\n                        </Switch>\n                    </BrowserRouter>\n                </RoleContext.Provider>\n            </ThemeProvider>\n        </Fragment>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}